import { Tab , CaptionedRotaryKnob, Group, TouchButton, TextTouchButton, GL, HL, VL } from "common.slint";
import { UIState } from "state.slint";

export component EffectsTab inherits Tab {
    property <length> inner-padding: 10px;
    property <length> inner-spacing: 40px;

    GL {
        Group {
            col: 0;
            rowspan: 2;
            name: "Echo";
            GL {
                spacing: inner-spacing;
                padding: inner-padding;
                CaptionedRotaryKnob { 
                    text: "Amount";
                    row: 0;
                    col: 0;

                    value: UIState.echo-mix;
                    changed(v) => {UIState.echo-mix-changed(v)}
                    minimum: UIState.echo-mix-control.min;
                    maximum: UIState.echo-mix-control.max;

                }
                CaptionedRotaryKnob {
                    text: "Duration";
                    row: 0;
                    col: 1;
                    value: UIState.echo-duration;
                    changed(v) => {UIState.echo-duration-changed(v)}
                    minimum: UIState.echo-duration-control.min;
                    maximum: UIState.echo-duration-control.max;
                }
                CaptionedRotaryKnob {
                    text: "Feedback";
                    row: 1;
                    col: 0;
                    rowspan: 2;
                    
                    value: UIState.echo-feedback;
                    changed(v) => {UIState.echo-feedback-changed(v)}
                    minimum: UIState.echo-feedback-control.min;
                    maximum: UIState.echo-feedback-control.max;
                }
            }

        }

        Group {
            col: 1;
            rowspan: 2;
            name: "Reverb";

            GL {
                spacing: inner-spacing;
                padding: inner-padding;
                CaptionedRotaryKnob {
                    text: "Amount";
                    row: 0;
                    col: 0;

                    value: UIState.reverb-mix;
                    changed(v) => {UIState.reverb-mix-changed(v)}
                    minimum: UIState.reverb-mix-control.min;
                    maximum: UIState.reverb-mix-control.max;
                }
                CaptionedRotaryKnob {
                    text: "Time";
                    row: 0;
                    col: 1;

                    value: UIState.reverb-time;
                    changed(v) => {UIState.reverb-time-changed(v)}
                    minimum: UIState.reverb-time-control.min;
                    maximum: UIState.reverb-time-control.max;

                }
                CaptionedRotaryKnob {
                    text: "Damp";
                    row: 1;
                    col: 0;

                    value: UIState.reverb-damp;
                    changed(v) => {UIState.reverb-damp-changed(v)}
                    minimum: UIState.reverb-damp-control.min;
                    maximum: UIState.reverb-damp-control.max;

                }
                CaptionedRotaryKnob {
                    text: "Size";
                    row: 1;
                    col: 1;

                    value: UIState.reverb-size;
                    changed(v) => {UIState.reverb-size-changed(v)}
                    minimum: UIState.reverb-size-control.min;
                    maximum: UIState.reverb-size-control.max;

                }
            }
        }
        Group {
            col: 2;
            name: "Drone";
            height: 50%;
            HL {
                alignment: LayoutAlignment.center;
                spacing: inner-spacing;
                padding: inner-padding;
                CaptionedRotaryKnob {
                    text: "Detune";

                    value: UIState.drone-detune;
                    changed(v) => {UIState.drone-detune-changed(v)}
                    minimum: UIState.drone-detune-control.min;
                    maximum: UIState.drone-detune-control.max;
                }
            }
        }

        Group {
            col: 2;
            row: 1;
            name: "Pluck Drone";
            VL {
                gdrone := TextTouchButton { 
                    text: "Enable";

                    checked: UIState.enable-guitar-drone;
                    clicked => {UIState.guitar-drone-clicked()}
                }
                Rectangle {}
            }

        }
    }
}